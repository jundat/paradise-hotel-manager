<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AD//AAA//wAAP//AAD//8AD///4f//////8=
</value>
  </data>
</root>